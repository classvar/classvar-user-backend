# This is a basic workflow to help you get started with Actions

name: Docker build image and push and deploy to EC2

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Docker Login
        uses: docker/login-action@v1.10.0
        with:
          username: seongbin9786
          password: ${{ secrets.DOCKER_HUB_PRIVATE_KEY }}

      # SSL 인증서를 classpath 내에 위치시킨다.
      - name: Copy SSL Certificate
        run: echo "${{ secrets.SSL_PKCS12 }}" | base64 --decode > ./src/main/resources/SSL_CERTIFICATE.p12

      # 이렇게 빌드된 경우 인증서가 포함되므로 외부에 공개할 수 없다.
      # 따라서 private repo로 전환하고, Image pull 시에 login을 수행하도록 한다.
      # DockerHub 로그인은 (아이디, 토큰)으로도 가능하다.
      # https://docs.docker.com/docker-hub/access-tokens/ 참고
      - name: Build Docker Image
        run: |
          chmod +x ./gradlew
          ./gradlew bootBuildImage --imageName=seongbin9786/classvar_backend

      - name: Push Docker Image
        run: docker push seongbin9786/classvar_backend

      - name: Shutdown old compose instance and start new one
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_KEY }}
          port: ${{ secrets.AWS_EC2_PORT }}
          script: |
            cd ~/classvar-user-backend
            sudo docker-compose down
            sudo docker stop $(sudo docker ps -a -q)
            sudo docker rm $(sudo docker ps -a -q)
            cd ..
            rm -rf ./classvar-user-backend
            git clone https://github.com/classvar/classvar-user-backend
            cd ./classvar-user-backend
            echo -e "SPRING_PROFILES_ACTIVE=${{ secrets.SPRING_PROFILES_ACTIVE }}\nSSL_PKCS12_PASSWORD=${{ secrets.SSL_PKCS12_PASSWORD }}" > .env
            sudo docker login -u seongbin9786 -p ${{ secrets.DOCKER_HUB_PRIVATE_KEY }}
            sudo docker pull seongbin9786/classvar_backend
            sudo docker-compose --env-file .env up -d